/**
 * DialMyCalls API
 * The DialMyCalls API
 *
 * OpenAPI spec version: 2.0.1
 * Contact: support@dialmycalls.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Models/CreateCallParameters'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../Models/CreateCallParameters'));
  } else {
    // Browser globals (root is window)
    if (!root.DialmycallsJsClient) {
      root.DialmycallsJsClient = {};
    }
    root.DialmycallsJsClient.Calls = factory(root.DialmycallsJsClient.ApiClient, root.DialmycallsJsClient.CreateCallParameters);
  }
}(this, function(ApiClient, CreateCallParameters) {
  'use strict';

  /**
   * Calls service.
   * @module Api/Calls
   * @version 2.0.1
   */

  /**
   * Constructs a new Calls. 
   * @alias module:Api/Calls
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the cancelCallById operation.
     * @callback module:Api/Calls~cancelCallByIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel Call
     * Cancel an outgoing call. &lt;br&gt;&lt;br&gt; Returns the following if a valid identifier was provided, and returns an error otherwise. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X DELETE https://$API_KEY@api.dialmycalls.com/2.0/service/call/$CALL_ID &#x60;&#x60;&#x60;
     * @param {String} callId CallId
     * @param {module:Api/Calls~cancelCallByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.cancelCallById = function(callId, callback) {
      var postBody = null;

      // verify the required parameter 'callId' is set
      if (callId == undefined || callId == null) {
        throw "Missing the required parameter 'callId' when calling cancelCallById";
      }


      var pathParams = {
        'CallId': callId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/service/call/{CallId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createCall operation.
     * @callback module:Api/Calls~createCallCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Call
     * Create an outgoing call broadcast. &lt;br&gt;&lt;br&gt; Returns a call service object on success, and returns an error otherwise. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X POST -d \&quot;{\\\&quot;name\\\&quot;: \\\&quot;Test\\\&quot;, \\\&quot;callerid_id\\\&quot;: \\\&quot;8bc6748e-d8a0-11e4-8b2d-00163e603cea\\\&quot;, \\\&quot;recording_id\\\&quot;: \\\&quot;079ff28a-1b75-11e5-88eb-00163e603cea\\\&quot;, \\\&quot;send_immediately\\\&quot;: true, \\\&quot;use_amd\\\&quot;: true, \\\&quot;contacts\\\&quot;: [{\\\&quot;phone\\\&quot;:\\\&quot;1116551235\\\&quot;},{\\\&quot;phone\\\&quot;:\\\&quot;1116551234\\\&quot;}]}\&quot; https://$API_KEY@api.dialmycalls.com/2.0/service/call &#x60;&#x60;&#x60;
     * @param {module:Models/CreateCallParameters} createCallParameters Request body
     * @param {module:Api/Calls~createCallCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.createCall = function(createCallParameters, callback) {
      var postBody = createCallParameters;

      // verify the required parameter 'createCallParameters' is set
      if (createCallParameters == undefined || createCallParameters == null) {
        throw "Missing the required parameter 'createCallParameters' when calling createCall";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/service/call', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCallById operation.
     * @callback module:Api/Calls~getCallByIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Call
     * Retrieve a call. &lt;br&gt;&lt;br&gt; Returns a call service object if a valid identifier was provided, and returns an error otherwise. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X GET https://$API_KEY@api.dialmycalls.com/2.0/service/call/$CALL_ID &#x60;&#x60;&#x60;
     * @param {String} callId CallId
     * @param {module:Api/Calls~getCallByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getCallById = function(callId, callback) {
      var postBody = null;

      // verify the required parameter 'callId' is set
      if (callId == undefined || callId == null) {
        throw "Missing the required parameter 'callId' when calling getCallById";
      }


      var pathParams = {
        'CallId': callId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/service/call/{CallId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCallRecipientsByCallId operation.
     * @callback module:Api/Calls~getCallRecipientsByCallIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Call Recipients
     * Retrieve a list of a call&#39;s recipients. &lt;br&gt;&lt;br&gt; Returns a list of call recipient objects if a valid identifier was provided, and returns an error otherwise. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X GET https://$API_KEY@api.dialmycalls.com/2.0/service/call/$CALL_ID/recipients &#x60;&#x60;&#x60;
     * @param {String} callId CallId
     * @param {Object} opts Optional parameters
     * @param {String} opts.range Range (ie \&quot;records&#x3D;201-300\&quot;) of recipients requested
     * @param {module:Api/Calls~getCallRecipientsByCallIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getCallRecipientsByCallId = function(callId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'callId' is set
      if (callId == undefined || callId == null) {
        throw "Missing the required parameter 'callId' when calling getCallRecipientsByCallId";
      }


      var pathParams = {
        'CallId': callId
      };
      var queryParams = {
      };
      var headerParams = {
        'Range': opts['range']
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/service/call/{CallId}/recipients', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCalls operation.
     * @callback module:Api/Calls~getCallsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Calls
     * Retrieve a list of calls. &lt;br&gt;&lt;br&gt; Returns a list of call service objects. &lt;br&gt;&lt;br&gt; &#x60;&#x60;&#x60; curl -i -H \&quot;Content-Type: application/json\&quot; -X GET https://$API_KEY@api.dialmycalls.com/2.0/service/calls &#x60;&#x60;&#x60;
     * @param {Object} opts Optional parameters
     * @param {String} opts.range Range (ie \&quot;records&#x3D;201-300\&quot;) of calls requested
     * @param {module:Api/Calls~getCallsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getCalls = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        'Range': opts['range']
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/service/calls', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
