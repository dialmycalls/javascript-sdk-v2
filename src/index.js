/**
 * DialMyCalls API
 * The DialMyCalls API
 *
 * OpenAPI spec version: 2.0.1
 * Contact: support@dialmycalls.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Models/Accessaccount', 'Models/Account', 'Models/CallRecipient', 'Models/Callerid', 'Models/Callservice', 'Models/Contact', 'Models/ContactAttributes', 'Models/CreateAccessAccountParameters', 'Models/CreateCallParameters', 'Models/CreateCallerIdParameters', 'Models/CreateContactParameters', 'Models/CreateGroupParameters', 'Models/CreateRecordingByPhoneParameters', 'Models/CreateRecordingByUrlParameters', 'Models/CreateRecordingParameters', 'Models/CreateTextParameters', 'Models/CreateUnverifiedCallerIdParameters', 'Models/Donotcontact', 'Models/Group', 'Models/Identifier', 'Models/Incomingtext', 'Models/Keyword', 'Models/Polling', 'Models/PushToListenAgain', 'Models/PushToOptOut', 'Models/PushToRecord', 'Models/PushToTalk', 'Models/Recording', 'Models/Service', 'Models/Shortcode', 'Models/TextRecipient', 'Models/UpdateAccessAccountByIdParameters', 'Models/UpdateCallerIdByIdParameters', 'Models/UpdateContactByIdParameters', 'Models/UpdateGroupByIdParameters', 'Models/UpdateRecordingByIdParameters', 'Models/UpdateVanityNumberByIdParameters', 'Models/Vanitynumber', 'Models/VerifyCallerIdByIdParameters', 'Api/Accounts', 'Api/CallerIds', 'Api/Calls', 'Api/Contacts', 'Api/DoNotContacts', 'Api/Groups', 'Api/Keywords', 'Api/Recordings', 'Api/Texts', 'Api/VanityNumbers'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./Models/Accessaccount'), require('./Models/Account'), require('./Models/CallRecipient'), require('./Models/Callerid'), require('./Models/Callservice'), require('./Models/Contact'), require('./Models/ContactAttributes'), require('./Models/CreateAccessAccountParameters'), require('./Models/CreateCallParameters'), require('./Models/CreateCallerIdParameters'), require('./Models/CreateContactParameters'), require('./Models/CreateGroupParameters'), require('./Models/CreateRecordingByPhoneParameters'), require('./Models/CreateRecordingByUrlParameters'), require('./Models/CreateRecordingParameters'), require('./Models/CreateTextParameters'), require('./Models/CreateUnverifiedCallerIdParameters'), require('./Models/Donotcontact'), require('./Models/Group'), require('./Models/Identifier'), require('./Models/Incomingtext'), require('./Models/Keyword'), require('./Models/Polling'), require('./Models/PushToListenAgain'), require('./Models/PushToOptOut'), require('./Models/PushToRecord'), require('./Models/PushToTalk'), require('./Models/Recording'), require('./Models/Service'), require('./Models/Shortcode'), require('./Models/TextRecipient'), require('./Models/UpdateAccessAccountByIdParameters'), require('./Models/UpdateCallerIdByIdParameters'), require('./Models/UpdateContactByIdParameters'), require('./Models/UpdateGroupByIdParameters'), require('./Models/UpdateRecordingByIdParameters'), require('./Models/UpdateVanityNumberByIdParameters'), require('./Models/Vanitynumber'), require('./Models/VerifyCallerIdByIdParameters'), require('./Api/Accounts'), require('./Api/CallerIds'), require('./Api/Calls'), require('./Api/Contacts'), require('./Api/DoNotContacts'), require('./Api/Groups'), require('./Api/Keywords'), require('./Api/Recordings'), require('./Api/Texts'), require('./Api/VanityNumbers'));
  }
}(function(ApiClient, Accessaccount, Account, CallRecipient, Callerid, Callservice, Contact, ContactAttributes, CreateAccessAccountParameters, CreateCallParameters, CreateCallerIdParameters, CreateContactParameters, CreateGroupParameters, CreateRecordingByPhoneParameters, CreateRecordingByUrlParameters, CreateRecordingParameters, CreateTextParameters, CreateUnverifiedCallerIdParameters, Donotcontact, Group, Identifier, Incomingtext, Keyword, Polling, PushToListenAgain, PushToOptOut, PushToRecord, PushToTalk, Recording, Service, Shortcode, TextRecipient, UpdateAccessAccountByIdParameters, UpdateCallerIdByIdParameters, UpdateContactByIdParameters, UpdateGroupByIdParameters, UpdateRecordingByIdParameters, UpdateVanityNumberByIdParameters, Vanitynumber, VerifyCallerIdByIdParameters, Accounts, CallerIds, Calls, Contacts, DoNotContacts, Groups, Keywords, Recordings, Texts, VanityNumbers) {
  'use strict';

  /**
   * The_DialMyCalls_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var DialmycallsJsClient = require('index'); // See note below*.
   * var xxxSvc = new DialmycallsJsClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new DialmycallsJsClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new DialmycallsJsClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new DialmycallsJsClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Accessaccount model constructor.
     * @property {module:Models/Accessaccount}
     */
    Accessaccount: Accessaccount,
    /**
     * The Account model constructor.
     * @property {module:Models/Account}
     */
    Account: Account,
    /**
     * The CallRecipient model constructor.
     * @property {module:Models/CallRecipient}
     */
    CallRecipient: CallRecipient,
    /**
     * The Callerid model constructor.
     * @property {module:Models/Callerid}
     */
    Callerid: Callerid,
    /**
     * The Callservice model constructor.
     * @property {module:Models/Callservice}
     */
    Callservice: Callservice,
    /**
     * The Contact model constructor.
     * @property {module:Models/Contact}
     */
    Contact: Contact,
    /**
     * The ContactAttributes model constructor.
     * @property {module:Models/ContactAttributes}
     */
    ContactAttributes: ContactAttributes,
    /**
     * The CreateAccessAccountParameters model constructor.
     * @property {module:Models/CreateAccessAccountParameters}
     */
    CreateAccessAccountParameters: CreateAccessAccountParameters,
    /**
     * The CreateCallParameters model constructor.
     * @property {module:Models/CreateCallParameters}
     */
    CreateCallParameters: CreateCallParameters,
    /**
     * The CreateCallerIdParameters model constructor.
     * @property {module:Models/CreateCallerIdParameters}
     */
    CreateCallerIdParameters: CreateCallerIdParameters,
    /**
     * The CreateContactParameters model constructor.
     * @property {module:Models/CreateContactParameters}
     */
    CreateContactParameters: CreateContactParameters,
    /**
     * The CreateGroupParameters model constructor.
     * @property {module:Models/CreateGroupParameters}
     */
    CreateGroupParameters: CreateGroupParameters,
    /**
     * The CreateRecordingByPhoneParameters model constructor.
     * @property {module:Models/CreateRecordingByPhoneParameters}
     */
    CreateRecordingByPhoneParameters: CreateRecordingByPhoneParameters,
    /**
     * The CreateRecordingByUrlParameters model constructor.
     * @property {module:Models/CreateRecordingByUrlParameters}
     */
    CreateRecordingByUrlParameters: CreateRecordingByUrlParameters,
    /**
     * The CreateRecordingParameters model constructor.
     * @property {module:Models/CreateRecordingParameters}
     */
    CreateRecordingParameters: CreateRecordingParameters,
    /**
     * The CreateTextParameters model constructor.
     * @property {module:Models/CreateTextParameters}
     */
    CreateTextParameters: CreateTextParameters,
    /**
     * The CreateUnverifiedCallerIdParameters model constructor.
     * @property {module:Models/CreateUnverifiedCallerIdParameters}
     */
    CreateUnverifiedCallerIdParameters: CreateUnverifiedCallerIdParameters,
    /**
     * The Donotcontact model constructor.
     * @property {module:Models/Donotcontact}
     */
    Donotcontact: Donotcontact,
    /**
     * The Group model constructor.
     * @property {module:Models/Group}
     */
    Group: Group,
    /**
     * The Identifier model constructor.
     * @property {module:Models/Identifier}
     */
    Identifier: Identifier,
    /**
     * The Incomingtext model constructor.
     * @property {module:Models/Incomingtext}
     */
    Incomingtext: Incomingtext,
    /**
     * The Keyword model constructor.
     * @property {module:Models/Keyword}
     */
    Keyword: Keyword,
    /**
     * The Polling model constructor.
     * @property {module:Models/Polling}
     */
    Polling: Polling,
    /**
     * The PushToListenAgain model constructor.
     * @property {module:Models/PushToListenAgain}
     */
    PushToListenAgain: PushToListenAgain,
    /**
     * The PushToOptOut model constructor.
     * @property {module:Models/PushToOptOut}
     */
    PushToOptOut: PushToOptOut,
    /**
     * The PushToRecord model constructor.
     * @property {module:Models/PushToRecord}
     */
    PushToRecord: PushToRecord,
    /**
     * The PushToTalk model constructor.
     * @property {module:Models/PushToTalk}
     */
    PushToTalk: PushToTalk,
    /**
     * The Recording model constructor.
     * @property {module:Models/Recording}
     */
    Recording: Recording,
    /**
     * The Service model constructor.
     * @property {module:Models/Service}
     */
    Service: Service,
    /**
     * The Shortcode model constructor.
     * @property {module:Models/Shortcode}
     */
    Shortcode: Shortcode,
    /**
     * The TextRecipient model constructor.
     * @property {module:Models/TextRecipient}
     */
    TextRecipient: TextRecipient,
    /**
     * The UpdateAccessAccountByIdParameters model constructor.
     * @property {module:Models/UpdateAccessAccountByIdParameters}
     */
    UpdateAccessAccountByIdParameters: UpdateAccessAccountByIdParameters,
    /**
     * The UpdateCallerIdByIdParameters model constructor.
     * @property {module:Models/UpdateCallerIdByIdParameters}
     */
    UpdateCallerIdByIdParameters: UpdateCallerIdByIdParameters,
    /**
     * The UpdateContactByIdParameters model constructor.
     * @property {module:Models/UpdateContactByIdParameters}
     */
    UpdateContactByIdParameters: UpdateContactByIdParameters,
    /**
     * The UpdateGroupByIdParameters model constructor.
     * @property {module:Models/UpdateGroupByIdParameters}
     */
    UpdateGroupByIdParameters: UpdateGroupByIdParameters,
    /**
     * The UpdateRecordingByIdParameters model constructor.
     * @property {module:Models/UpdateRecordingByIdParameters}
     */
    UpdateRecordingByIdParameters: UpdateRecordingByIdParameters,
    /**
     * The UpdateVanityNumberByIdParameters model constructor.
     * @property {module:Models/UpdateVanityNumberByIdParameters}
     */
    UpdateVanityNumberByIdParameters: UpdateVanityNumberByIdParameters,
    /**
     * The Vanitynumber model constructor.
     * @property {module:Models/Vanitynumber}
     */
    Vanitynumber: Vanitynumber,
    /**
     * The VerifyCallerIdByIdParameters model constructor.
     * @property {module:Models/VerifyCallerIdByIdParameters}
     */
    VerifyCallerIdByIdParameters: VerifyCallerIdByIdParameters,
    /**
     * The Accounts service constructor.
     * @property {module:Api/Accounts}
     */
    Accounts: Accounts,
    /**
     * The CallerIds service constructor.
     * @property {module:Api/CallerIds}
     */
    CallerIds: CallerIds,
    /**
     * The Calls service constructor.
     * @property {module:Api/Calls}
     */
    Calls: Calls,
    /**
     * The Contacts service constructor.
     * @property {module:Api/Contacts}
     */
    Contacts: Contacts,
    /**
     * The DoNotContacts service constructor.
     * @property {module:Api/DoNotContacts}
     */
    DoNotContacts: DoNotContacts,
    /**
     * The Groups service constructor.
     * @property {module:Api/Groups}
     */
    Groups: Groups,
    /**
     * The Keywords service constructor.
     * @property {module:Api/Keywords}
     */
    Keywords: Keywords,
    /**
     * The Recordings service constructor.
     * @property {module:Api/Recordings}
     */
    Recordings: Recordings,
    /**
     * The Texts service constructor.
     * @property {module:Api/Texts}
     */
    Texts: Texts,
    /**
     * The VanityNumbers service constructor.
     * @property {module:Api/VanityNumbers}
     */
    VanityNumbers: VanityNumbers
  };

  return exports;
}));
