/**
 * DialMyCalls API
 * The DialMyCalls API
 *
 * OpenAPI spec version: 2.0.1
 * Contact: support@dialmycalls.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Models/ContactAttributes'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ContactAttributes'));
  } else {
    // Browser globals (root is window)
    if (!root.DialmycallsJsClient) {
      root.DialmycallsJsClient = {};
    }
    root.DialmycallsJsClient.CreateTextParameters = factory(root.DialmycallsJsClient.ApiClient, root.DialmycallsJsClient.ContactAttributes);
  }
}(this, function(ApiClient, ContactAttributes) {
  'use strict';




  /**
   * The CreateTextParameters model module.
   * @module Models/CreateTextParameters
   * @version 2.0.1
   */

  /**
   * Constructs a new <code>CreateTextParameters</code>.
   * @alias module:Models/CreateTextParameters
   * @class
   */
  var exports = function() {
    var _this = this;











  };

  /**
   * Constructs a <code>CreateTextParameters</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Models/CreateTextParameters} obj Optional instance to populate.
   * @return {module:Models/CreateTextParameters} The populated <code>CreateTextParameters</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('keyword_id')) {
        obj['keyword_id'] = ApiClient.convertToType(data['keyword_id'], 'String');
      }
      if (data.hasOwnProperty('messages')) {
        obj['messages'] = ApiClient.convertToType(data['messages'], ['String']);
      }
      if (data.hasOwnProperty('send_at')) {
        obj['send_at'] = ApiClient.convertToType(data['send_at'], 'String');
      }
      if (data.hasOwnProperty('send_immediately')) {
        obj['send_immediately'] = ApiClient.convertToType(data['send_immediately'], 'Boolean');
      }
      if (data.hasOwnProperty('send_email')) {
        obj['send_email'] = ApiClient.convertToType(data['send_email'], 'Boolean');
      }
      if (data.hasOwnProperty('accessaccount_id')) {
        obj['accessaccount_id'] = ApiClient.convertToType(data['accessaccount_id'], 'String');
      }
      if (data.hasOwnProperty('shortcode_id')) {
        obj['shortcode_id'] = ApiClient.convertToType(data['shortcode_id'], 'String');
      }
      if (data.hasOwnProperty('concatenate_sms')) {
        obj['concatenate_sms'] = ApiClient.convertToType(data['concatenate_sms'], 'Boolean');
      }
      if (data.hasOwnProperty('contacts')) {
        obj['contacts'] = ApiClient.convertToType(data['contacts'], [ContactAttributes]);
      }
    }
    return obj;
  }

  /**
   * (Required)  Name the broadcast.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * (Required)  The keyword id that should be associated with this broadcast.
   * @member {String} keyword_id
   */
  exports.prototype['keyword_id'] = undefined;
  /**
   * (Required)  List of messages to send (up to 10).
   * @member {Array.<String>} messages
   */
  exports.prototype['messages'] = undefined;
  /**
   * When the broadcast should be sent. (Ex: 2016-07-25T12:00:00+0000)
   * @member {String} send_at
   */
  exports.prototype['send_at'] = undefined;
  /**
   * Should the broadcast go out immediately?
   * @member {Boolean} send_immediately
   */
  exports.prototype['send_immediately'] = undefined;
  /**
   * Also send an email to the contacts?
   * @member {Boolean} send_email
   */
  exports.prototype['send_email'] = undefined;
  /**
   * Schedule this broadcast as an access account.
   * @member {String} accessaccount_id
   */
  exports.prototype['accessaccount_id'] = undefined;
  /**
   * The shortcode id that the broadcast will be sent from.
   * @member {String} shortcode_id
   */
  exports.prototype['shortcode_id'] = undefined;
  /**
   * Combine all SMS messages into 1 message on the end users device.
   * @member {Boolean} concatenate_sms
   */
  exports.prototype['concatenate_sms'] = undefined;
  /**
   * (Required)  List of contact information that should be sent the broadcast.
   * @member {Array.<module:Models/ContactAttributes>} contacts
   */
  exports.prototype['contacts'] = undefined;



  return exports;
}));


